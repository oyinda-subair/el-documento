version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/openjdk:8-jdk
      # Service container image available at `host: localhost`

      - image: circleci/postgres:9.6.9-postgis
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: el_documento_test
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for postgres db to start
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - restore_cache:
          keys:
          - scala-library-dependencies-{{ checksum "build.sbt" }}
          - scala-library-dependencies
      - run:
           name: compile
           command: sbt test:compile
      - save_cache:
          key: scala-library-dependencies-{{ checksum "build.sbt" }}
          paths:
            - target/resolution-cache
            - target/streams
            - project/target/resolution-cache
            - project/target/streams
            - ~/.sbt
            - ~/.iv2/cache
            - ~/.m2
      - save_cache:
          # Changing this to a different key is the only way to remove old dependencies from the cache and/or generate a more up-to-date cache
          key: el-documento
          paths:
            - ~/.sbt
            - ~/.iv2/cache
            - ~/.m2
      - run:
          name: clean database
          command: sbt test:flywayClean
      - run:
          name: migrate database for test
          command: sbt test:flywayMigrate
      - run:
          name: run test and coverage
          command: sbt clean coverage test coverageReport
      - run:
          name: push coverage
          command: bash <(curl -s https://codecov.io/bash)